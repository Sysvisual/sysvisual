export default((e,t)=>new Promise((r,o)=>{if(void 0!==t.detectAlreadyImportedKey&&window[t.detectAlreadyImportedKey]){console.warn(`${e} was already imported. Skipping import`),r({alreadyImported:!0,exports:{}});return}let a=document.createElement("script");a.src=`/assets/${e}.js`,a.async=!0,a.onload=()=>{console.log(`${e} was loaded successfully via legacy wrapper.`);let a={};if(void 0!==t.exportFilters){let l=t.exportFilters;switch(typeof l){case"string":if(void 0===window[l]){o(Error("No object to export that satisfies the exact match filter."));return}a[l]=window[l];break;case"object":if(l instanceof RegExp)for(let s in window)l.test(s)&&(a[s]=window[s]);else if(Array.isArray(l))for(let d in window)l.includes(d)&&(a[d]=window[d]);else{o(Error(`type of filter is not supported: ${typeof l}`));return}break;default:o(Error(`type of filter is not supported: ${typeof l}`));return}}else{r({alreadyImported:!1,exports:window});return}Object.keys(a).length<=0&&o(Error(`${e} was loaded but no exports were not found.`)),r({alreadyImported:!1,exports:a})},a.onerror=t=>{console.error(`Failed to load ${e} via legacy wrapper:`,t),o(Error(`Failed to load ${e} via legacy wrapper.`))},document.body.appendChild(a)}));