services:
  mongo:
    image: mongo
    ports:
      - "127.0.0.1:27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: sysvisual

  postgres:
    image: postgres
    user: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_DB: sysvisual
      POSTGRES_USER: root
      TZ: Europe/Berlin
    volumes:
      - "./infra/postgresql:/docker-entrypoint-initdb.d"
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      dockerfile: ./Dockerfile
    env_file:
      - .env
    ports:
      - "127.0.0.1:8080:8080"

  frontend:
    build:
      context: ../lasermatti.de
      dockerfile: ../lasermatti.de/Dockerfile
    ports:
      - "3000:80"
    volumes:
      - type: volume
        source: product-images
        target: /app/public/products

  frontent-admin:
    build:
      context: ../admin-board
      dockerfile: ../admin-board/Dockerfile
    ports:
      - "3001:80"
  loki:
    image: grafana/loki
    ports:
      - "3100:3100"
    healthcheck:
      test: [ "CMD", "wget", "-O-", "http://localhost:3100/ready" ]
      interval: 10s
      timeout: 15s
      retries: 10
      start_period: 10s


volumes:
  product-images: