let importedLegacyWrapper=!1;async function _loadLegacyScript(e,a){return importedLegacyWrapper||(window.loadLegacyScript=(await import("/assets/wrapper.js")).default,importedLegacyWrapper=!0,console.log("Loaded legacy wrapper since it was not loaded.")),console.log(`Using legacy loader for "${e}"`),await window.loadLegacyScript(e,a.legacyOptions)}async function loadModule(e,a){try{switch(a.type){case"JavaScript":{let l;l=a.legacy?(await _loadLegacyScript(e,a)).exports:await import(`/assets/${e}.js`);let r=void 0===a.globalName?l:a.globalName;window[r]=l,console.log(`Module '${r}' loaded and available globally as 'window.${r}'`);break}case"CSS":{let t=document.createElement("link");t.rel="stylesheet",t.href=`/assets/${e}.css`,t.onload=()=>{console.log(`Module '${e}' (CSS) loaded successfully.`)},t.onerror=()=>{let a=Error(`Failed to load CSS module '${e}'.`);console.error(a.message)},document.head.appendChild(t);break}default:console.error(`Type "${a.type}" is not supported by the current version of the module loader.`)}}catch(o){console.error(`Error loading or processing module '${e}':`,o)}}async function loadLiteGraph(){return Promise.all([loadModule("litegraphjs/litegraph",{type:"JavaScript",globalName:"litegraph",legacy:!0,legacyOptions:{detectAlreadyImportedKey:"LiteGraph",exportFilters:/^LiteGraph|LG/}}),loadModule("litegraphjs/litegraph",{type:"CSS"}),])}